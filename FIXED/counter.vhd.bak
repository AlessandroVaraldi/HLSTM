library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity counter is
	generic (n : integer := 8);
	port (
		clock		: in std_logic ;
		aclr		: in std_logic ;
		sclr		: in std_logic ;
		cnt_en		: in std_logic ;
		q			: out std_logic_vector (n-1 downto 0)
	);
end counter;

architecture rtl of counter is
	signal cnt : unsigned (n-1 downto 0) := (others => '0');

	begin
		process(clock, aclr)
		begin
			if aclr = '1' then
				cnt <= (others => '0');
			elsif rising_edge(clock) then
				if sclr = '1' then
					cnt <= (others => '0');
				elsif cnt_en = '1' then
					cnt <= cnt + to_unsigned(1,n);
				end if;
			end if;
		end process;

		q <= std_logic_vector(cnt);

end rtl;