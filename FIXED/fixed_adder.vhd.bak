library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_misc.all;

use work.mytypes.all;

entity fixed_adder is
	port
	(
		clock		: in std_logic;
		in_a		: in signed (15 downto 0);
		in_b		: in signed (15 downto 0);
		res		: out signed (15 downto 0)
	);
end fixed_adder;

architecture rtl of fixed_adder is

signal mul: signed (31 downto 0) := (others => '0');
signal sgn: std_logic := '0';

begin

	process (clock)
	begin
		if rising_edge(clock) then
			mul <= signed(('0' & std_logic_vector(in_a (14 downto 0)))) * signed(('0' & std_logic_vector(in_b (14 downto 0))));
			sgn <= (in_a (15) xor in_b (15)) and or_reduce(std_logic_vector(in_a));
			res <= signed(sgn & std_logic_vector(mul (27 downto 13)))
		end if;
	end process;
end rtl;